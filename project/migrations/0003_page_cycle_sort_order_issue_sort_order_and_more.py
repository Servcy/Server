# Generated by Django 4.2.9 on 2024-03-02 13:32

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import project.models.project


class Migration(migrations.Migration):
    dependencies = [
        ("iam", "0005_user_first_name_user_last_name_workspacememberinvite_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("project", "0002_alter_issueactivity_attachments_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.JSONField(blank=True, default=dict)),
                ("description_html", models.TextField(blank=True, default="<p></p>")),
                ("description_stripped", models.TextField(blank=True, null=True)),
                (
                    "access",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Public"), (1, "Private")], default=0
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=255)),
                ("archived_at", models.DateField(null=True)),
                ("is_locked", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Page",
                "verbose_name_plural": "Pages",
                "db_table": "page",
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddField(
            model_name="cycle",
            name="sort_order",
            field=models.FloatField(default=65535),
        ),
        migrations.AddField(
            model_name="issue",
            name="sort_order",
            field=models.FloatField(default=65535),
        ),
        migrations.AddField(
            model_name="label",
            name="sort_order",
            field=models.FloatField(default=65535),
        ),
        migrations.AddField(
            model_name="module",
            name="sort_order",
            field=models.FloatField(default=65535),
        ),
        migrations.AddField(
            model_name="projectmember",
            name="role",
            field=models.PositiveSmallIntegerField(
                choices=[(3, "Owner"), (2, "Admin"), (1, "Member"), (0, "Guest")],
                default=10,
            ),
        ),
        migrations.AddField(
            model_name="projectmemberinvite",
            name="role",
            field=models.PositiveSmallIntegerField(
                choices=[(3, "Owner"), (2, "Admin"), (1, "Member"), (0, "Guest")],
                default=10,
            ),
        ),
        migrations.CreateModel(
            name="PageLabel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "label",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_labels",
                        to="project.label",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_labels",
                        to="project.page",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page Label",
                "verbose_name_plural": "Page Labels",
                "db_table": "page_label",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="PageBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.JSONField(blank=True, default=dict)),
                ("description_html", models.TextField(blank=True, default="<p></p>")),
                ("description_stripped", models.TextField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(null=True)),
                ("sort_order", models.FloatField(default=65535)),
                ("sync", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="blocks",
                        to="project.issue",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocks",
                        to="project.page",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page Block",
                "verbose_name_plural": "Page Blocks",
                "db_table": "page_block",
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddField(
            model_name="page",
            name="labels",
            field=models.ManyToManyField(
                blank=True,
                related_name="pages",
                through="project.PageLabel",
                to="project.label",
            ),
        ),
        migrations.AddField(
            model_name="page",
            name="owned_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pages",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="page",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="child_page",
                to="project.page",
            ),
        ),
        migrations.AddField(
            model_name="page",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="project_%(class)s",
                to="project.project",
            ),
        ),
        migrations.AddField(
            model_name="page",
            name="updated_by",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="page",
            name="workspace",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workspace_%(class)s",
                to="iam.workspace",
            ),
        ),
        migrations.CreateModel(
            name="IssueSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sequence", models.PositiveBigIntegerField(default=1)),
                ("deleted", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="issue_sequence",
                        to="project.issue",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Issue Sequence",
                "verbose_name_plural": "Issue Sequences",
                "db_table": "issue_sequence",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="ProjectPublicMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="public_project_members",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Public Member",
                "verbose_name_plural": "Project Public Members",
                "db_table": "project_public_member",
                "ordering": ("-created_at",),
                "unique_together": {("project", "member")},
            },
        ),
        migrations.CreateModel(
            name="ProjectIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=12)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_identifier",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_identifiers",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Identifier",
                "verbose_name_plural": "Project Identifiers",
                "db_table": "project_identifier",
                "ordering": ("-created_at",),
                "unique_together": {("name", "workspace")},
            },
        ),
        migrations.CreateModel(
            name="ProjectDeployBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "anchor",
                    models.CharField(
                        db_index=True,
                        default=project.models.project.get_anchor,
                        max_length=255,
                        unique=True,
                    ),
                ),
                ("comments", models.BooleanField(default=False)),
                ("reactions", models.BooleanField(default=False)),
                ("votes", models.BooleanField(default=False)),
                ("views", models.JSONField(default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Deploy Board",
                "verbose_name_plural": "Project Deploy Boards",
                "db_table": "project_deploy_board",
                "ordering": ("-created_at",),
                "unique_together": {("project", "anchor")},
            },
        ),
        migrations.CreateModel(
            name="PageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("transaction", models.UUIDField(default=uuid.uuid4)),
                ("entity_identifier", models.UUIDField(null=True)),
                (
                    "entity_name",
                    models.CharField(
                        choices=[
                            ("to_do", "To Do"),
                            ("issue", "issue"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("file", "File"),
                            ("link", "Link"),
                            ("cycle", "Cycle"),
                            ("module", "Module"),
                            ("back_link", "Back Link"),
                            ("forward_link", "Forward Link"),
                            ("page_mention", "Page Mention"),
                            ("user_mention", "User Mention"),
                        ],
                        max_length=30,
                        verbose_name="Transaction Type",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_log",
                        to="project.page",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page Log",
                "verbose_name_plural": "Page Logs",
                "db_table": "page_log",
                "ordering": ("-created_at",),
                "unique_together": {("page", "transaction")},
            },
        ),
        migrations.CreateModel(
            name="PageFavorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_favorites",
                        to="project.page",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_%(class)s",
                        to="project.project",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_favorites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workspace_%(class)s",
                        to="iam.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page Favorite",
                "verbose_name_plural": "Page Favorites",
                "db_table": "page_favorite",
                "ordering": ("-created_at",),
                "unique_together": {("page", "user")},
            },
        ),
    ]
